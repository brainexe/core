<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
	<parameters>
		<parameter key="debug">false</parameter>
		<parameter key="cache.enabled">true</parameter> <!--todo needed ?-->
		<parameter key="server.address">localhost:8080</parameter>

		<parameter key="qr.baseUrl">https://api.qrserver.com/v1/create-qr-code/?size=%%dx%%d&amp;data=%s</parameter>
		<parameter key="locales" type="collection"></parameter>

		<parameter key="hipchat.api_token"/>
		<parameter key="hipchat.room"/>
		<parameter key="hipchat.name">%application.name%</parameter>
		<parameter key="hipchat.logLevel" type="collection">Monolog\Logger::ERROR</parameter>

		<parameter key="timezone">Europe/Berlin</parameter>

		<parameter key="redis.host">127.0.0.1</parameter>
		<parameter key="redis.password"/>
		<parameter key="redis.database">0</parameter>
		<parameter key="redis.class">BrainExe\Core\Redis\Predis</parameter><!--todo needed?-->

		<parameter key="cache.dir">%application.root%cache/</parameter>
		<parameter key="logger.dir">%application.root%logs/</parameter>

		<parameter key="application.name" on-invalid="exception"/>
		<parameter key="application.guests_allowed">false</parameter>
		<parameter key="application.allowed_private_ips">false</parameter>
		<parameter key="application.registration_enabled">true</parameter>

		<parameter key="logger.channels" type="collection">
			<parameter type="collection">
				<parameter>%logger.dir%error.log</parameter>
				<parameter type="constant">Monolog\Logger::ERROR</parameter>
			</parameter>
			<parameter type="collection">
				<parameter>%logger.dir%info.log</parameter>
				<parameter type="constant">Monolog\Logger::INFO</parameter>
			</parameter>
			<parameter type="collection">
				<parameter>%logger.dir%debug.log</parameter>
				<parameter type="constant">Monolog\Logger::DEBUG</parameter>
			</parameter>
			<parameter type="collection">
				<parameter>%logger.dir%message_queue.log</parameter>
				<parameter type="constant">Monolog\Logger::INFO</parameter>
				<parameter>message_queue</parameter>
			</parameter>
			<parameter type="collection">
				<parameter>%logger.dir%gentime.log</parameter>
				<parameter type="constant">Monolog\Logger::INFO</parameter>
				<parameter>gentime</parameter>
			</parameter>
			<parameter type="collection">
				<parameter>%logger.dir%redis.log</parameter>
				<parameter type="constant">Monolog\Logger::DEBUG</parameter>
				<parameter>redis</parameter>
			</parameter>
		</parameter>
        <parameter key="message_queue.enabled">true</parameter>
	</parameters>

    <services>
		<service id="monolog.ErrorHandler" class="Monolog\ErrorHandler">
			<argument type="service" id="Monolog.Logger"/>
			<call method="registerErrorHandler"/>
			<call method="registerExceptionHandler"/>
			<call method="registerFatalHandler"/>
		</service>

        <service id="monolog.logger" class="Monolog\Logger" public="false">
            <argument>%application.name%</argument>
        </service>

		<service id="Console" class="Symfony\Component\Console\Application"/>

		<service id="RedisSession" class="Symfony\Component\HttpFoundation\Session\Session" public="false">
			<argument type="service">
				<service class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
					<argument type="collection">
						<argument key="cookie_httponly">true</argument>
						<argument key="cookie_lifetime">30758400</argument>
						<argument key="name">sid_%application.name%</argument>
					</argument>

					<argument type="service" id="RedisSessionHandler"/>
				</service>
			</argument>
		</service>

		<!--TODO-->
		<service id="service_container" class="Symfony\Component\DependencyInjection\Container" public="false"/>

		<service id="ProcessBuilder" class="Symfony\Component\Process\ProcessBuilder" public="false"/>
		<service id="Filesystem" class="BrainExe\Core\Util\Filesystem" public="false"/>
		<service id="Finder" class="Symfony\Component\Finder\Finder" public="false"/>

		<service id="cache" class="Doctrine\Common\Cache\PredisCache" public="false">
			<argument type="service" id="redis"/>
			<call method="setNamespace">cache</call>
		</service>

		<service id="UrlGenerator" class="Symfony\Component\Routing\Generator\UrlGenerator" public="false">
			<argument type="service" id="Core.RouteCollection"/>
			<argument type="service">
				<service class="Symfony\Component\Routing\RequestContext"/>
			</argument>
		</service>
	</services>
</container>
