<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
	<parameters>
		<parameter key="debug">false</parameter>
		<parameter key="cache.enabled">true</parameter>
		<parameter key="server.address">localhost:8080</parameter>

		<parameter key="xhgui.header.php"></parameter>

		<parameter key="timezone">Europe/Berlin</parameter>

		<parameter key="redis.host">127.0.0.1</parameter>
		<parameter key="redis.password"/>
		<parameter key="redis.database">0</parameter>
		<parameter key="redis.class">BrainExe\Core\Redis\PhpRedis</parameter>

		<parameter key="cdn.url">/</parameter>
		<parameter key="cache.dir">%application.root%cache/</parameter>
		<parameter key="template.dir">%application.root%templates/</parameter>

		<parameter key="logger.dir">%application.root%logs/</parameter>
		<parameter key="logger.error.log">%logger.dir%error.log</parameter>
		<parameter key="logger.info.log">%logger.dir%info.log</parameter>
		<parameter key="logger.message_queue.log">%logger.dir%message_queue.log</parameter>
		<parameter key="logger.redis.log">%logger.dir%redis.log</parameter>

		<parameter key="application.name" on-invalid="exception"/>
		<parameter key="application.layout_template">layout.html.twig</parameter>
		<parameter key="application.error_template">error.html.twig</parameter>
		<parameter key="application.guests_allowed">false</parameter>
		<parameter key="application.registration_enabled">true</parameter>

		<parameter key="message_queue.enabled">true</parameter>

		<parameter key="piwik.site"></parameter>
		<parameter key="piwik.id"></parameter>
	</parameters>

    <services>
        <service id="redis" class="BrainExe\Core\Redis\Predis" public="false"></service>

		<service id="monolog.ErrorHandler" class="Monolog\ErrorHandler">
			<argument type="service" id="Monolog.Logger"/>
			<call method="registerErrorHandler"/>
			<call method="registerExceptionHandler"/>
			<call method="registerFatalHandler"/>
		</service>

        <service id="monolog.logger" class="Monolog\Logger" public="false">
            <argument>%application.name%</argument>
			<!--TODO generic solution-->
			<call method="pushHandler">
				<argument type="service">
					<service class="BrainExe\Core\Logger\ChannelStreamHandler">
						<argument>%logger.error.log%</argument>
						<argument type="constant">Monolog\Logger::ERROR</argument>
					</service>
				</argument>
			</call>
			<call method="pushHandler">
				<argument type="service">
					<service class="BrainExe\Core\Logger\ChannelStreamHandler">
						<argument>%logger.info.log%</argument>
						<argument type="constant">Monolog\Logger::INFO</argument>
					</service>
				</argument>
			</call>
			<call method="pushHandler">
				<argument type="service">
					<service class="BrainExe\Core\Logger\ChannelStreamHandler">
						<argument>%logger.message_queue.log%</argument>
						<argument type="constant">Monolog\Logger::INFO</argument>
                        <argument>message_queue</argument>
                    </service>
				</argument>
			</call>
			<call method="pushHandler">
				<argument type="service">
					<service class="BrainExe\Core\Logger\ChannelStreamHandler">
						<argument>%logger.dir%gentime.log</argument>
						<argument type="constant">Monolog\Logger::DEBUG</argument>
						<argument>gentime</argument>
					</service>
				</argument>
			</call>
			<call method="pushHandler">
				<argument type="service">
					<service class="BrainExe\Core\Logger\ChannelStreamHandler">
						<argument>%logger.dir%redis.log</argument>
						<argument type="constant">Monolog\Logger::DEBUG</argument>
						<argument>redis</argument>
					</service>
				</argument>
			</call>
        </service>
		<service id="EventDispatcher" class="BrainExe\Core\EventDispatcher\EventDispatcher" public="false">
			<argument type="service" id="service_container"/>
			<call method="setEnabled">
				<argument>%message_queue.enabled%</argument>
			</call>
			<call method="addCatchall">
				<argument type="service" id="Expression.Listener"></argument>
			</call>
		</service>

		<service id="Console" class="Symfony\Component\Console\Application"/>

		<service id="RedisSession" class="Symfony\Component\HttpFoundation\Session\Session" public="false">
			<argument type="service">
				<service class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
					<argument type="collection">
						<argument key="cookie_httponly">true</argument>
						<argument key="cookie_lifetime">30758400</argument>
						<argument key="name">sid_%application.name%</argument>
					</argument>

					<argument type="service" id="RedisSessionHandler"/>
				</service>
			</argument>
		</service>

		<!--TODO-->
		<service id="service_container" class="Symfony\Component\DependencyInjection\Container" public="false"/>

		<service id="ProcessBuilder" class="Symfony\Component\Process\ProcessBuilder" public="false"/>
		<service id="Filesystem" class="BrainExe\Core\Util\Filesystem" public="false"/>
		<service id="Finder" class="Symfony\Component\Finder\Finder" public="false"/>

		<service id="cache.redis" class="Doctrine\Common\Cache\RedisCache" public="false">
			<argument type="service" id="redis"/>
		</service>
		<service id="cache" alias="cache.redis" public="false" />

		<service id="UrlGenerator" class="Symfony\Component\Routing\Generator\UrlGenerator" public="false">
			<argument type="service" id="Core.RouteCollection"/>
			<argument type="service">
				<service class="Symfony\Component\Routing\RequestContext"/>
			</argument>
		</service>
	</services>
</container>
